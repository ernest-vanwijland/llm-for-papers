{
  "paper": "2502.08125",
  "toprove": 0,
  "validity": 1,
  "comment": "paraphrase",
  "proof": "The proof is by induction on the level `i`. For the base case, `i = 0` (which means `x = 0` or `x = m`), we compute the exact distance for every vertex, so the statement holds.\n\nFirst, we will establish that $d^x(v) \\le \\tilde{d}^x(v)$. If the vertex `v` is dead within the subproblem `x`, then by definition $\\tilde{d}^x(v) = \\tilde{d}^l(v)$, where `l` is the start of the interval corresponding to node `x` in the recursion tree. The level of `l` is therefore less than `i`. By the induction hypothesis, we have $\\tilde{d}^l(v) \\le d^l(v)$. Additionally, since $l < x$, we know that $d^x(v) \\le d^l(v)$. Consequently, we can conclude that $\\tilde{d}^x(v) \\le d^l(v) \\le d^x(v) = d^x(v)$. Thus, we can proceed assuming that `v` is an alive vertex.\n\nLet $p = s, v_1, v_2, \\dots, v_k$ be the shortest path from `s` to $v = v_k$ in the graph $G_x$. The value $\\tilde{d}^x(v)$ is the length of `p` after being rounded up to the nearest integer power of $1 + \\epsilon / \\log m$. Note that the path segment $v_1, v_2, \\dots, v_k$ must also exist in $G'_x$, as all edges unique to $G'_x$ originate at `s`. If the edge $(s, v_1)$ is also present in $G'_x$, then `p` is a path in $G'_x$. This implies that $d'_{G'_x}(v)$, the shortest path length in $G'_x$, is at most the length of `p`, and therefore $\\tilde{d}^x(v) \\le d^x(v)$. Otherwise, there must be an edge $(u, v_1)$ in $G_x$ where `u` is a dead vertex at time `x`. In this case, the graph $G'_x$ contains an edge $(s, v_1)$ with weight $\\tilde{d}^l(u) + w(u, v_1)$. As we have already shown, because `u` is dead at time `x`, it follows that $\\tilde{d}^l(u) \\ge d^l(u)$. Therefore, we have the following inequality:\n$$\n\\tilde{d}^x(v) \\ge \\tilde{d}^l(u) + w(u, v_1) + d_{G_x}(v_1, v) \\ge d^l(u) + w(u, v_1) + d_{G_x}(v_1, v) \\ge d^x(v).\n$$\n\nNext, we will show that $\\tilde{d}^x(v) \\le d^x(v)(1 + \\epsilon / \\log m)^i$. Let `q` be the shortest path from `s` to `v` in $G_x$. If `q` is also a path in $G'_x$, then it immediately follows that $\\tilde{d}^x(v) \\le d^x(v)(1 + \\epsilon / \\log m)$. If `q` is not in $G'_x$, let $(a, b)$ be the last edge on the path `q` that does not exist in $G'_x$. This implies that either `a` or `b` is not an alive vertex in $G_x$.\n\nFirst, let's assume `b` is not alive in $G_x$. This means `b` must be the final vertex of the path `q`. If there were another edge $(b, c)$ in `q`, that edge would exist in $G'_x$, which would make `b` an alive vertex in $G_x$ (since $b \\ne s$). As `b` is the last vertex, we have $v = b$, and `v` is dead in $G_x$. It follows that:\n$$\n\\tilde{d}^x(v) = \\tilde{d}^r(v) \\le d^r(v)(1 + \\epsilon / \\log m)^{i-1} < d^x(v)(1 + \\epsilon / \\log m)^{i-1},\n$$\nwhere `r` is the end of the interval for node `x` in the recursion tree. The first inequality is due to the induction hypothesis, as the level of `r` is strictly less than `i`. The second inequality holds because $x \\le r$, and adding more edges can only decrease the distances from `s`.\n\nAlternatively, assume `b` is alive in $G_x$, which means `a` must be dead in $G_x$. In this case, there is an edge $(s, b)$ in $G'_x$ with a weight of $\\tilde{d}^r(a) + w(a, b) = d^r(a) + w(a, b)$. We can form a path from `s` to `v` in $G'_x$ by prepending this edge to the suffix of `q` that starts at `b`. The length of this path is $d^r(a) + w(a, b) + d_{G_x}(b, v)$. Since the level of `r` is less than `x`, the induction hypothesis gives us $d^r(a) \\le d^r(a)(1 + \\epsilon / \\log m)^{i-1}$. From this, we can derive the following:\n\\begin{align*}\n\\tilde{d}^x(v) &\\le (d^r(a) + w(a, b) + d_{G_x}(b, v))(1 + \\epsilon / \\log m) \\\\\n&\\le (d^r(a)(1 + \\epsilon / \\log m)^{i-1} + w(a, b) + d_{G_x}(b, v))(1 + \\epsilon / \\log m) \\\\\n&\\le (d^x(a) + w(a, b) + d_{G_x}(b, v))(1 + \\epsilon / \\log m)^i \\\\\n&= d^x(v)(1 + \\epsilon / \\log m)^i.\n\\end{align*}",
  "timestamp": "2025-09-15T12:30:40.784423"
}
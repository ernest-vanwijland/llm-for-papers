{
  "paper": "2502.08328",
  "toprove": 23,
  "validity": 0,
  "comment": "error",
  "proof": "Proof. For any $e \\in E_G(S_G, \\bar{S_G})$, there is a corresponding $e' = \\{v, w\\} \\in E_K$ such that $e$ is an edge on the path corresponding to $e'$ (as clearly, $e$ cannot be an edge going to an attached tree, since all edges in a tree attached to vertices of $S_K$ in $C$ are in $S_G$), and an endpoint of $e$ must be a kernel vertex â€“ in particular it is also an endpoint of $e'$, say $v \\in S_K$. But then if $e' \\notin E_K(S_K, \\bar{S_K})$, it must be the case $v, w \\in S_K$. Then all vertices on the path corresponding to $e'$ are in $S_G$, which implies $e \\notin E_G(S_G, \\bar{S_G})$. Contradiction. Thus $e' \\in E_K(S_K, \\bar{S_K})$.\nAlso note that for there cannot be two edges $e_1 \\neq e_2 \\in E_G(S_G, \\bar{S_G})$ with the same corresponding kernel-edge. This is because the vertices of any path corresponding to a kernel edge are either all in $S_G$ or cross the boundary to $\\bar{S_G}$ exactly once. If the path crossed the boundary more than once, it would imply a cycle in the kernel graph $K$, which is not possible. Thus, each path can contribute at most one edge to the cut $E_G(S_G, \\bar{S_G})$. Therefore $|E_K(S_K, \\bar{S_K})| \\ge |E_G(S_G, \\bar{S_G})|$.\nFor the converse, if $e \\in E_K(S_K, \\bar{S_K})$, say $e = \\{v, w\\}, v \\in S_K$, then the first edge $e'$ on the induced path corresponding to $e$ in $G$ going from $v$ is in $E_G(S_G, \\bar{S_G})$. This mapping $e \\leftrightarrow e'$ is an injection, as it has a unique inverse (contracting a maximal induced path gives a unique vertex set).",
  "timestamp": "2025-09-15T13:29:01.919549"
}